version: '3.8'

services:
  # Backend API service
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=musician_gear_tracker
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=changeme_in_production
      - AWS_REGION=us-east-1
      - AWS_BUCKET_NAME=musician-gear-tracker-media
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=musician_gear_tracker
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Mount initialization scripts
      - ./backend/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: